# perlcritic.ini - Config for perlcritic "linter".

#===============
# Global options
#===============

# Set default compliance level to 1. Over-ride from CLI to be more forgiving.
severity = 1

# All themes by default, including add-on themes
# Perl::Critic::Bangs
# Perl::Critic::Nits
# Perl::Critic::Lokku
# Perl::Critic::Itch
# Perl::Critic::Pulp
# Perl::Critic::StricterSubs
# Perl::Critic::Policy::Perlsecret - Don't use perl "secret" code sequences.

theme    =

# What to report
# top        = 20   # Default
# statistics = 1    # Default

# Message generated for failures
verbose    = %f: %m at line %l, column %c. (Severity: %s, Policy: %p)\n


#========================
# Policy Overrides - Core
#========================

[TestingAndDebugging::RequireUseWarnings]
severity = 5

[NamingConventions::Capitalization]
local_lexical_variables = [_a-z][A-Za-z0-9]*
file_lexical_variables = [_a-z][A-Za-z0-9]*
scoped_lexical_variables = [_a-z][A-Za-z0-9]*
global_variables = [_a-z][A-Za-z0-9]*
global_variable_exemptions = VERSION
subroutines = [_a-z][A-Za-z0-9]*

[Documentation::RequirePodSections]
lib_sections    = NAME | VERSION | SYNOPSIS | DESCRIPTION | CLASS METHODS | INSTALLATION | BUGS AND SUPPORT | DEVELOPMENT & CONTRIBUTION | AUTHOR | COPYRIGHT AND LICENSE

# Not sophisticated enough to distinguish long but simple RE from short but
# complex RE, and/or reduce flexibility or readability.
[-RegularExpressions::ProhibitComplexRegexes]
[-RegularExpressions::RequireExtendedFormatting]
[-RegularExpressions::RequireDotMatchAnything]
[-RegularExpressions::RequireLineBoundaryMatching]
[-RegularExpressions::ProhibitEscapedMetacharacters]

[Variables::ProhibitPunctuationVars]
# Ok that this doesn't allow @$ - should use Try::Tiny instead.
allow = $!

[ValuesAndExpressions::RequireInterpolationOfMetachars]

[CodeLayout::RequireTidyCode]
perltidyrc = xt/author/perltidy.ini

# If break function on parameters, don't want comma after last one
[CodeLayout::RequireTrailingCommaAtNewline]
except_function_calls=1

# Can't configure to skip checking some builtins, or to only check some
# builtins. So skipping this check.
[-CodeLayout::ProhibitParensWithBuiltins]

# Not compatable with a __DATA__ section, as pod before data is treated as
# pod before end, but p0d after __DATA__ is __DATA__!!!
[-Documentation::RequirePodAtEnd]

#=========================
# Policy Overrides - Bangs
#=========================

[-Bangs::ProhibitCommentedOutCode]
# Dzil turns pod into comments, pod usually contains code...

[Bangs::ProhibitFlagComments]
# SRJ - May trigger for pod?
# FIXME: FIXME only removed for testing boilerplate generation.
# Add back in before release.
# keywords = XXX TODO FIXME REVIEW
keywords = XXX TODO REVIEW

[Bangs::ProhibitVagueNames]
add_names = foo bar

#=========================
# Policy Overrides - Nits
#=========================

# N/A


#=========================
# Policy Overrides - Lokku
#=========================

# N/A

#=========================
# Policy Overrides - Itch
#=========================

# N/A

#================================
# Policy Overrides - StricterSubs
#================================

# Just too many false positives from modules that export subs but don't use
# a standard exproter mechansim. I hate that this doesn't work.
[-Subroutines::ProhibitCallsToUndeclaredSubs]

# No way to configure this to skip anything, and some modules work by
# making you call fully qualified functions, eg Readonly::Scalar.
[-Subroutines::ProhibitCallsToUnexportedSubs]
