#! /usr/bin/env perl

use strict;
use warnings;
use 5.010;

=for :stopwords tidyall perltidy perlcritic config CPAN perl

=cut

# PODNAME: xt/author/tidyall.t

# ABSTRACT: Check that tidyall runs without error

# VERSION

=head1 SYNOPSIS

    # Run just this author test
    # cd <some built distribution version directory>
    prove -lr xt/author/tidyall.t

    # Run all author tests
    # cd <developer distribution directory>
    dzil test # [RunExtraTests] dist.ini plugin runs author tests by default.

=head1 DESCRIPTION

Runs L<tidyall|tidyall> as specified by the F<tidyall.ini> file. This code is
based on the test auto-generated by
L<Dist::Zilla::Plugin::Test::TidyAll|Dist::Zilla::Plugin::Test::TidyAll>.
Essentially just a wrapper around calling
L<Test::Code::TidyAll::tidyall_ok()|Test::Code::TidyAll/DESCRIPTION>.

The L<tidyall|tidyall> program wraps multiple code checkers, cleaners and
testers in one interface. This test uses that interface to insure that
L<tidyall|tidyall> has been run, i.e. it runs L<tidyall|tidyall> in "test" mode.
As configured by the F<tidyall.ini> file, this runs two programs,
L<perltidy|perltidy> and L<perlcritic|perlcritic>:

=for :list  L<perltidy|perltidy> - All perl files using the config file
F<pertidy.ini>.

=for :list  L<perlcritic|perlcritic> - All F<*.pm> files under F<lib/>
(including subdirectories) using the config file F<perlcritic.ini>.

=for :list  L<perlcritic|perlcritic> - All F<*.t> files under F<t/> and F<xt/>
(including subdirectories) using the config file F<perlcritic_test.ini>.

The L<perltidy|perltidy> and L<perlcritic|perlcritic> programs are both, in
general, quality checkers and as such are run as author tests. As with all
author tests, this test and the resources it needs (i.e. the config files) have
to be part of the distributed CPAN directory, even though they are not for the
user.

The perl critic tests are extensive, but carefully customized via their config
file to give, on average, few false positive complaints. (Start Rant) It is
unusual for Perl distributions to run critic tests on the *.t files. This is
evidence that Perl authors hold tests to be exempt from good coding practices,
which implies that it is not important for tests to be correct or to be written
well... "My time. It's Precious. Tests-es, we hates them." (End Rant).

=cut

# For interpolated constants
use Readonly;

# Test harness interface, we are only running the one test. It runs others.
use Test::More 0.96 tests => 1;

# Need to know if have Test::Code::TidyAll 0.24 or greater. Will skip this test
# if don't have it. `require` with a version limit is harder than 'use'.
Readonly my $WANT_TEST_TIDY_VERSION => 0.24;

my $isFoundTestTidyAll = eval {

   # TidyAll test implementation.
   require Test::Code::TidyAll;
   1;
};
if ($isFoundTestTidyAll) {
   $isFoundTestTidyAll = ( version->new( Test::Code::TidyAll->VERSION ) >=
        version->new($WANT_TEST_TIDY_VERSION) );
}

=head1 TESTS

=head2 Calling Test::Code::TidyAll::tidyall_ok()

Loads the tidyall config file and uses it to run a bunch of other tests.

=cut

SKIP: {
   if ( ! $isFoundTestTidyAll ) {
      my $context = 'Skipping 1 of 1.';
      my $message = "Test::Code::TidyAll $WANT_TEST_TIDY_VERSION+ required.";
      diag("$context $message");
      skip( $message, 1 );
   }

   Test::Code::TidyAll->import();

   subtest(
      'All files tidy and critic free?' => sub {
         tidyall_ok( conf_file => 'xt/author/tidyall.ini' );
      }
   );
}

__END__
